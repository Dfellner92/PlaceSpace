{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setdrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDateState","setTokenExpirationDateState","setUserId","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.be47d841.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({ \n    isLoggedIn: false, \n    userId: null,\n    token: null,\n    login: () => {}, \n    logout: () => {} \n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [tokenExpirationDateState, setTokenExpirationDateState] = useState();\n    const [userId, setUserId] = useState(false);\n  \n    const login = useCallback((uid, token, expirationDate) => {\n      setToken(token);\n      setUserId(uid);\n      const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n      setTokenExpirationDateState(tokenExpirationDate)\n      localStorage.setItem(\n        'userData', \n        JSON.stringify({ \n          userId: uid, \n          token: token,\n          expiration: tokenExpirationDate.toISOString() \n        })\n      );\n    }, []);\n  \n    const logout = useCallback(() => {\n      setToken(null);\n      setTokenExpirationDateState(null);\n      setUserId(null);\n      localStorage.removeItem('userData');\n    }, []);\n  \n    useEffect(() => {\n      if (token && tokenExpirationDateState) {\n        const remainingTime = tokenExpirationDateState.getTime() - new Date().getTime();\n        logoutTimer = setTimeout(logout, remainingTime);\n      } else {\n        clearTimeout(logoutTimer);\n      }\n    }, [token, logout, tokenExpirationDateState])\n  \n    // make sure useEffect is after login,\n    // still synchronous\n    useEffect(() => {\n      const storedData = JSON.parse(localStorage.getItem('userData'));\n      if (\n        storedData && \n        storedData.token &&\n        new Date(storedData.expiration) > new Date()\n      ) {\n        login(storedData.userId, storedData.token, new Date(storedData.expiration));\n      }\n    }, [login]);\n\n    return { token, login, logout, userId };\n}","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">\n        {props.children}\n    </header>\n};\n\nexport default MainHeader;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext);\n    \n    return <ul className=\"nav-links\">\n        <li>\n            <NavLink to=\"/\" exact>ALL USERS</NavLink>\n        </li>\n        {auth.isLoggedIn && (\n            <li>\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n            </li> \n        )}\n        {auth.isLoggedIn && (\n            <li>\n                <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n            </li>\n        )}\n        {!auth.isLoggedIn && (\n            <li>\n                <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n            </li>\n        )}\n        {auth.isLoggedIn && (\n            <li>\n                <button onClick={auth.logout}>LOGOUT</button>\n            </li>\n        )}\n    </ul>\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    const content = (\n        <CSSTransition \n            in={props.show} \n            timeout={200} \n            classNames=\"slide-in-left\" \n            mountOnEnter \n            unmountOnExit\n        >\n            <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n        </CSSTransition>\n    );\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setdrawerIsOpen] = useState(false);\n\n    const openDrawerHandler = () => {\n        setdrawerIsOpen(true);\n    };\n\n    const closeDrawerHandler = () => {\n        setdrawerIsOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            {drawerIsOpen ? (\n                <Backdrop onClick={closeDrawerHandler}/>\n            ) : null}\n            \n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks />\n                </nav>\n            </SideDrawer>\n            \n            <MainHeader>\n                <button className=\"main-navigation__menu-btn \" onClick={openDrawerHandler}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\">YourPlaces</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks/>\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    )\n};\n\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n//import Users from './user/pages/Users';\n//import NewPlace from './places/pages/NewPlace';\n//import UserPlaces from './places/pages/UserPlaces';\n//import UpdatePlace from './places/pages/UpdatePlace';\n//import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner/>\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}