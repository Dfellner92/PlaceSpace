{"ast":null,"code":"var _jsxFileName = \"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/shared/components/FormElements/ImageUpload.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \".jpg,.png,.jpeg\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, previewUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: previewUrl,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 36\n    }\n  }), !previewUrl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \"Please select an image\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"PICK IMAGE\")), !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }\n  }, props.errorText));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/shared/components/FormElements/ImageUpload.js"],"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,aAAa,GAAGZ,MAAM,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACI,IAAL,EAAW;AACP;AACH;;AACD,UAAMO,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,IAAAA,UAAU,CAACE,MAAX,GAAoB,MAAM;AACtBN,MAAAA,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb;AACH,KAFD;;AAGAH,IAAAA,UAAU,CAACI,aAAX,CAAyBX,IAAzB;AACH,GATQ,EASN,CAACA,IAAD,CATM,CAAT;;AAWA,QAAMY,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAIC,UAAJ;AACA,QAAIC,WAAW,GAAGX,OAAlB;;AACA,QAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;AACvDJ,MAAAA,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAhB,MAAAA,OAAO,CAACa,UAAD,CAAP;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,MAAAA,WAAW,GAAG,IAAd;AACH,KALD,MAKO;AACHV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,MAAAA,WAAW,GAAG,KAAd;AACH;;AACDhB,IAAAA,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;AACH,GAbD;;AAeA,QAAMM,gBAAgB,GAAG,MAAM;AAC3Bf,IAAAA,aAAa,CAACgB,OAAd,CAAsBC,KAAtB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAExB,KAAK,CAACqB,EADd;AAEI,IAAA,GAAG,EAAEd,aAFT;AAGI,IAAA,KAAK,EAAE;AAACkB,MAAAA,OAAO,EAAE;AAAV,KAHX;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,MAAM,EAAC,iBALX;AAMI,IAAA,QAAQ,EAAEZ,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAK,IAAA,SAAS,EAAG,gBAAeb,KAAK,CAAC0B,MAAN,IAAgB,QAAS,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,UAAU,iBAAI;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAsB,IAAA,GAAG,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,EAEK,CAACA,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFpB,CADJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEmB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CATJ,EAgBK,CAACjB,OAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAAC2B,SAAV,CAhBjB,CADJ;AAoBH,CAzDD;;AA2DA,eAAe5B,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const pickedHandler = (event) => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid)\n    };\n    \n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input \n                id={props.id} \n                ref={filePickerRef}\n                style={{display: 'none'}} \n                type=\"file\" \n                accept=\".jpg,.png,.jpeg\"\n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <p>Please select an image</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n};\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}