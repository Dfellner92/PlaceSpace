{"ast":null,"code":"import _slicedToArray from\"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import Button from'./Button';import'./ImageUpload.css';var ImageUpload=function ImageUpload(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),previewUrl=_useState4[0],setPreviewUrl=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var filePickerRef=useRef();useEffect(function(){if(!file){return;}var fileReader=new FileReader();fileReader.onload=function(){setPreviewUrl(fileReader.result);};fileReader.readAsDataURL(file);},[file]);var pickedHandler=function pickedHandler(event){var pickedFile;var fileIsValid=isValid;if(event.target.files&&event.target.files.length===1){pickedFile=event.target.files[0];setFile(pickedFile);setIsValid(true);fileIsValid=true;}else{setIsValid(false);fileIsValid=false;}props.onInput(props.id,pickedFile,fileIsValid);};var pickImageHandler=function pickImageHandler(){filePickerRef.current.click();};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"input\",{id:props.id,ref:filePickerRef,style:{display:'none'},type:\"file\",accept:\".jpg,.png,.jpeg\",onChange:pickedHandler}),/*#__PURE__*/React.createElement(\"div\",{className:\"image-upload \".concat(props.center&&'center')},/*#__PURE__*/React.createElement(\"div\",{className:\"image-upload__preview\"},previewUrl&&/*#__PURE__*/React.createElement(\"img\",{src:previewUrl,alt:\"Preview\"}),!previewUrl&&/*#__PURE__*/React.createElement(\"p\",null,\"Please select an image\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",onClick:pickImageHandler},\"PICK IMAGE\")),!isValid&&/*#__PURE__*/React.createElement(\"p\",null,props.errorText));};export default ImageUpload;","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/shared/components/FormElements/ImageUpload.js"],"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,eACDJ,QAAQ,EADP,wCAClBK,IADkB,eACZC,OADY,8BAEWN,QAAQ,EAFnB,yCAElBO,UAFkB,eAENC,aAFM,8BAGKR,QAAQ,CAAC,KAAD,CAHb,yCAGlBS,OAHkB,eAGTC,UAHS,eAKzB,GAAMC,CAAAA,aAAa,CAAGZ,MAAM,EAA5B,CAEAE,SAAS,CAAC,UAAM,CACZ,GAAI,CAACI,IAAL,CAAW,CACP,OACH,CACD,GAAMO,CAAAA,UAAU,CAAG,GAAIC,CAAAA,UAAJ,EAAnB,CACAD,UAAU,CAACE,MAAX,CAAoB,UAAM,CACtBN,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb,CACH,CAFD,CAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB,EACH,CATQ,CASN,CAACA,IAAD,CATM,CAAT,CAWA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,WAAW,CAAGX,OAAlB,CACA,GAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,EAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA8B,CAAxD,CAA2D,CACvDJ,UAAU,CAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb,CACAhB,OAAO,CAACa,UAAD,CAAP,CACAT,UAAU,CAAC,IAAD,CAAV,CACAU,WAAW,CAAG,IAAd,CACH,CALD,IAKO,CACHV,UAAU,CAAC,KAAD,CAAV,CACAU,WAAW,CAAG,KAAd,CACH,CACDhB,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,CAAwBN,UAAxB,CAAoCC,WAApC,EACH,CAbD,CAeA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3Bf,aAAa,CAACgB,OAAd,CAAsBC,KAAtB,GACH,CAFD,CAIA,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,6BACI,EAAE,CAAExB,KAAK,CAACqB,EADd,CAEI,GAAG,CAAEd,aAFT,CAGI,KAAK,CAAE,CAACkB,OAAO,CAAE,MAAV,CAHX,CAII,IAAI,CAAC,MAJT,CAKI,MAAM,CAAC,iBALX,CAMI,QAAQ,CAAEZ,aANd,EADJ,cASI,2BAAK,SAAS,wBAAkBb,KAAK,CAAC0B,MAAN,EAAgB,QAAlC,CAAd,eACI,2BAAK,SAAS,CAAC,uBAAf,EACKvB,UAAU,eAAI,2BAAK,GAAG,CAAEA,UAAV,CAAsB,GAAG,CAAC,SAA1B,EADnB,CAEK,CAACA,UAAD,eAAe,sDAFpB,CADJ,cAKI,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEmB,gBAA/B,eALJ,CATJ,CAgBK,CAACjB,OAAD,eAAY,6BAAIL,KAAK,CAAC2B,SAAV,CAhBjB,CADJ,CAoBH,CAzDD,CA2DA,cAAe5B,CAAAA,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const pickedHandler = (event) => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid)\n    };\n    \n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input \n                id={props.id} \n                ref={filePickerRef}\n                style={{display: 'none'}} \n                type=\"file\" \n                accept=\".jpg,.png,.jpeg\"\n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <p>Please select an image</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n};\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}