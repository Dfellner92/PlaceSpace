{"ast":null,"code":"import _regeneratorRuntime from\"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from'react';import{useParams,useHistory}from'react-router-dom';import Input from'../../shared/components/FormElements/Input';import Button from'../../shared/components/FormElements/Button';import Card from'../../shared/components/UIElements/Card';import{VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH}from'../../shared/util/validators';import{useForm}from'../../shared/hooks/form-hook';import{useHttpClient}from'../../shared/hooks/http-hook';import{AuthContext}from'../../shared/context/auth-context';import'./PlaceForm.css';import LoadingSpinner from'../../shared/components/UIElements/LoadingSpinner';import ErrorModal from'../../shared/components/UIElements/ErrorModal';var UpdatePlace=function UpdatePlace(){var auth=useContext(AuthContext);var _useHttpClient=useHttpClient(),isLoading=_useHttpClient.isLoading,error=_useHttpClient.error,sendRequest=_useHttpClient.sendRequest,clearError=_useHttpClient.clearError;var _useState=useState(),_useState2=_slicedToArray(_useState,2),loadedPlace=_useState2[0],setLoadedPlace=_useState2[1];var placeId=useParams().placeId;var history=useHistory();var _useForm=useForm({title:{value:'',isValid:false},description:{value:'',isValid:false}},false),_useForm2=_slicedToArray(_useForm,3),formState=_useForm2[0],inputHandler=_useForm2[1],setFormData=_useForm2[2];useEffect(function(){var fetchPlace=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return sendRequest(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/places/\").concat(placeId));case 3:responseData=_context.sent;setLoadedPlace(responseData.place);setFormData({title:{value:responseData.place.title,isValid:true},description:{value:responseData.place.description,isValid:true}},true);_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchPlace(){return _ref.apply(this,arguments);};}();fetchPlace();},[sendRequest,placeId,setFormData]);var placeUpdateSubmitHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_context2.prev=1;_context2.next=4;return sendRequest(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/places/\").concat(placeId),'PATCH',JSON.stringify({title:formState.inputs.title.value,description:formState.inputs.description.value}),{'Content-Type':'application/json',Authorization:'Bearer '+auth.token});case 4:history.push('/'+auth.userId+'/places');_context2.next=9;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);case 9:case\"end\":return _context2.stop();}}},_callee2,null,[[1,7]]);}));return function placeUpdateSubmitHandler(_x){return _ref2.apply(this,arguments);};}();if(isLoading){return/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(LoadingSpinner,null));}if(!loadedPlace&&!error){return/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Could not find place!\")));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorModal,{error:error,onClear:clearError}),!isLoading&&loadedPlace&&/*#__PURE__*/React.createElement(\"form\",{className:\"place-form\",onSubmit:placeUpdateSubmitHandler},/*#__PURE__*/React.createElement(Input,{id:\"title\",element:\"input\",type:\"text\",label:\"Title\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please enter a valid title.\",onInput:inputHandler,initialValue:loadedPlace.title,initialValid:true}),/*#__PURE__*/React.createElement(Input,{id:\"description\",element:\"textarea\",label:\"Description\",validators:[VALIDATOR_MINLENGTH(5)],errorText:\"Please enter a valid description (min. 5 characters).\",onInput:inputHandler,initialValue:loadedPlace.description,initialValid:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",disabled:!formState.isValid},\"UPDATE PLACE\")));};export default UpdatePlace;","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","Input","Button","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","LoadingSpinner","ErrorModal","UpdatePlace","auth","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","history","title","value","isValid","description","formState","inputHandler","setFormData","fetchPlace","process","env","REACT_APP_BACKEND_URL","responseData","place","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedPlace, setLoadedPlace] = useState();\n    const placeId = useParams().placeId;\n    const history = useHistory();\n    \n    const [formState, inputHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    useEffect(() => {\n        const fetchPlace = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n                );\n                setLoadedPlace(responseData.place)\n                setFormData(\n                    {\n                        title: {\n                            value: responseData.place.title,\n                            isValid: true\n                        },\n                        description: {\n                            value: responseData.place.description,\n                            isValid: true\n                        }\n                    },\n                    true\n                );\n            } catch (err) {}\n        };\n        fetchPlace();\n    }, [sendRequest, placeId, setFormData]);\n\n    const placeUpdateSubmitHandler = async event => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n                'PATCH',\n                JSON.stringify({\n                    title: formState.inputs.title.value,\n                    description: formState.inputs.description.value\n                }),\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            history.push('/' + auth.userId + '/places');\n        } catch (err) {}\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (!loadedPlace && !error) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find place!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {!isLoading && loadedPlace && (\n                <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n                    <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid title.\"\n                    onInput={inputHandler}\n                    initialValue={loadedPlace.title}\n                    initialValid={true}\n                    />\n                    <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid description (min. 5 characters).\"\n                    onInput={inputHandler}\n                    initialValue={loadedPlace.description}\n                    initialValid={true}\n                    />\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        UPDATE PLACE\n                    </Button>\n                </form>)}\n        </React.Fragment>\n    );\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}