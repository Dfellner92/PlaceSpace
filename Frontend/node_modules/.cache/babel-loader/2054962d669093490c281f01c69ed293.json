{"ast":null,"code":"var _jsxFileName = \"/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/user/pages/Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient(); //const [isLoading, setIsLoading] = useState(false);\n  //const [error, setError] = useState();\n\n  const [loadedUsers, setLoadedUsers] = useState(); // const USERS = [\n  //     {\n  //         id: 'u1', \n  //         name: 'Dan Fellner', \n  //         image: 'https://i.picsum.photos/id/997/200/300.jpg?hmac=NeXq5MvhpKvGEq_X3jULp2C3Lg-8IQK8bdtnyJeXDIQ', \n  //         places: 3\n  //     }\n  // ];\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n\n    fetchUsers(); // using useCallback in http-hook allows\n    // sendRequest not to be rerendered\n  }, [sendRequest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), !isLoading && loadedUsers && /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }\n  }), \";\");\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/Frontend/src/user/pages/Users.js"],"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","useHttpClient","Users","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","process","env","REACT_APP_BACKEND_URL","users","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDL,aAAa,EAAnE,CADgB,CAEhB;AACA;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C,CAJgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,UAAU,GAAG,YAAY;AAC3B,UAAI;AACA,cAAMC,YAAY,GAAG,MAAML,WAAW,CAClCM,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,QADF,CAAtC;AAGAL,QAAAA,cAAc,CAACE,YAAY,CAACI,KAAd,CAAd;AACH,OALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACnB,KAPD;;AAQAN,IAAAA,UAAU,GATE,CAUZ;AACA;AACH,GAZQ,EAYN,CAACJ,WAAD,CAZM,CAAT;AAgBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED,KAAnB;AAA0B,IAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKH,SAAS,iBACN;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,EAOK,CAACA,SAAD,IAAcI,WAAd,iBAA6B,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPlC,MADJ;AAWH,CAxCD;;AA0CA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    //const [isLoading, setIsLoading] = useState(false);\n    //const [error, setError] = useState();\n    const [loadedUsers, setLoadedUsers] = useState();\n    // const USERS = [\n    //     {\n    //         id: 'u1', \n    //         name: 'Dan Fellner', \n    //         image: 'https://i.picsum.photos/id/997/200/300.jpg?hmac=NeXq5MvhpKvGEq_X3jULp2C3Lg-8IQK8bdtnyJeXDIQ', \n    //         places: 3\n    //     }\n    // ];\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const responseData = await sendRequest(\n                    process.env.REACT_APP_BACKEND_URL + '/users'\n                );\n                setLoadedUsers(responseData.users);\n            } catch (err) {}\n        };\n        fetchUsers();\n        // using useCallback in http-hook allows\n        // sendRequest not to be rerendered\n    }, [sendRequest]);\n\n    \n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}/>\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers}/>};\n        </React.Fragment>\n    )\n};\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}